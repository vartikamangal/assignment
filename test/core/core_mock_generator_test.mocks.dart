// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/core/core_mock_generator_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:http/src/response.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/auth/domain/entities/oauth-data.dart'
    as _i9;
import 'package:tatsam_app_experimental/core/auth/domain/entities/user-data.dart'
    as _i10;
import 'package:tatsam_app_experimental/core/auth/domain/repositories/auth-repository.dart'
    as _i7;
import 'package:tatsam_app_experimental/core/data-source/api-client.dart'
    as _i6;
import 'package:tatsam_app_experimental/core/error/failures.dart' as _i8;
import 'package:tatsam_app_experimental/core/platform/network_info.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeResponse extends _i1.Fake implements _i2.Response {}

class _FakeEither<L, R> extends _i1.Fake implements _i3.Either<L, R> {
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i4.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i6.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Response> post({String? uri, String? body}) => (super
          .noSuchMethod(Invocation.method(#post, [], {#uri: uri, #body: body}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
      as _i5.Future<_i2.Response>);
  @override
  _i5.Future<_i2.Response> get({String? uri}) =>
      (super.noSuchMethod(Invocation.method(#get, [], {#uri: uri}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i5.Future<_i2.Response>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i7.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Either<_i8.Failure, _i9.OAuthData>> oauthLogin() =>
      (super.noSuchMethod(Invocation.method(#oauthLogin, []),
              returnValue: Future<_i3.Either<_i8.Failure, _i9.OAuthData>>.value(
                  _FakeEither<_i8.Failure, _i9.OAuthData>()))
          as _i5.Future<_i3.Either<_i8.Failure, _i9.OAuthData>>);
  @override
  _i5.Future<_i3.Either<_i8.Failure, _i9.OAuthData>> oauthSignup() =>
      (super.noSuchMethod(Invocation.method(#oauthSignup, []),
              returnValue: Future<_i3.Either<_i8.Failure, _i9.OAuthData>>.value(
                  _FakeEither<_i8.Failure, _i9.OAuthData>()))
          as _i5.Future<_i3.Either<_i8.Failure, _i9.OAuthData>>);
  @override
  _i5.Future<_i3.Either<_i8.Failure, _i3.Unit>> requestLogout() =>
      (super.noSuchMethod(Invocation.method(#requestLogout, []),
              returnValue: Future<_i3.Either<_i8.Failure, _i3.Unit>>.value(
                  _FakeEither<_i8.Failure, _i3.Unit>()))
          as _i5.Future<_i3.Either<_i8.Failure, _i3.Unit>>);
  @override
  _i5.Future<_i3.Either<_i8.Failure, _i9.OAuthData>> requestNewToken() =>
      (super.noSuchMethod(Invocation.method(#requestNewToken, []),
              returnValue: Future<_i3.Either<_i8.Failure, _i9.OAuthData>>.value(
                  _FakeEither<_i8.Failure, _i9.OAuthData>()))
          as _i5.Future<_i3.Either<_i8.Failure, _i9.OAuthData>>);
  @override
  _i5.Future<_i3.Either<_i8.Failure, bool>> checkIfAuthenticated() =>
      (super.noSuchMethod(Invocation.method(#checkIfAuthenticated, []),
              returnValue: Future<_i3.Either<_i8.Failure, bool>>.value(
                  _FakeEither<_i8.Failure, bool>()))
          as _i5.Future<_i3.Either<_i8.Failure, bool>>);
  @override
  _i5.Future<_i3.Either<_i8.Failure, _i10.UserData>> getUserDetails() =>
      (super.noSuchMethod(Invocation.method(#getUserDetails, []),
              returnValue: Future<_i3.Either<_i8.Failure, _i10.UserData>>.value(
                  _FakeEither<_i8.Failure, _i10.UserData>()))
          as _i5.Future<_i3.Either<_i8.Failure, _i10.UserData>>);
}
