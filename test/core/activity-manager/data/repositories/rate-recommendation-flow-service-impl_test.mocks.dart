// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/core/activity-manager/data/repositories/rate-recommendation-flow-service-impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/activity-management/data/models/feedback-model.dart'
    as _i5;
import 'package:tatsam_app_experimental/core/activity-management/data/sources/rate-recommendation-flow-remote-service.dart'
    as _i3;
import 'package:tatsam_app_experimental/core/platform/network_info.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeUnit extends _i1.Fake implements _i2.Unit {
  @override
  String toString() => super.toString();
}

/// A class which mocks [RateRecommendationFlowRemoteService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRateRecommendationFlowRemoteService extends _i1.Mock
    implements _i3.RateRecommendationFlowRemoteService {
  MockRateRecommendationFlowRemoteService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Unit> rateRecommendationFlow({_i5.FeedbackModel? feedback}) =>
      (super.noSuchMethod(
          Invocation.method(#rateRecommendationFlow, [], {#feedback: feedback}),
          returnValue:
              Future<_i2.Unit>.value(_FakeUnit())) as _i4.Future<_i2.Unit>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
