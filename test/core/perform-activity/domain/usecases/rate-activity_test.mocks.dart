// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/core/perform-activity/domain/usecases/rate-activity_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:dartz/dartz.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/error/failures.dart' as _i5;
import 'package:tatsam_app_experimental/core/perform-activity/data/models/activity_rating_model.dart'
    as _i6;
import 'package:tatsam_app_experimental/core/perform-activity/domain/entities/activity-status.dart'
    as _i7;
import 'package:tatsam_app_experimental/core/perform-activity/domain/repositories/activity-repository.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [ActivityRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityRepository extends _i1.Mock
    implements _i2.ActivityRepository {
  MockActivityRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>?> rateActivity(
          {_i6.ActivityRatingModel? feedback}) =>
      (super.noSuchMethod(
              Invocation.method(#rateActivity, [], {#feedback: feedback}),
              returnValue: Future<_i4.Either<_i5.Failure, _i4.Unit>?>.value())
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>?>);
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i7.ActivityStatus>?> updateActivityStatus(
          {String? status, int? actionId}) =>
      (super.noSuchMethod(
              Invocation.method(#updateActivityStatus, [],
                  {#status: status, #actionId: actionId}),
              returnValue:
                  Future<_i4.Either<_i5.Failure, _i7.ActivityStatus>?>.value())
          as _i3.Future<_i4.Either<_i5.Failure, _i7.ActivityStatus>?>);
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i7.ActivityStatus>?> startActivity(
          {String? recommendationId, bool? isInstantActivity}) =>
      (super.noSuchMethod(
              Invocation.method(#startActivity, [], {
                #recommendationId: recommendationId,
                #isInstantActivity: isInstantActivity
              }),
              returnValue:
                  Future<_i4.Either<_i5.Failure, _i7.ActivityStatus>?>.value())
          as _i3.Future<_i4.Either<_i5.Failure, _i7.ActivityStatus>?>);
}
