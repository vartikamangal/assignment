// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/core/voicenotes/data/repositories/stop-recording-service-impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/platform/network_info.dart' as _i6;
import 'package:tatsam_app_experimental/core/voicenotes/data/source/stop-recording-local-service.dart'
    as _i4;
import 'package:tatsam_app_experimental/core/voicenotes/domain/entity/recording-stopped.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeRecordingStopped extends _i1.Fake implements _i2.RecordingStopped {}

class _FakeUnit extends _i1.Fake implements _i3.Unit {
  @override
  String toString() => super.toString();
}

/// A class which mocks [StopRecordingLocalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStopRecordingLocalService extends _i1.Mock
    implements _i4.StopRecordingLocalService {
  MockStopRecordingLocalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.RecordingStopped> stopRecording() =>
      (super.noSuchMethod(Invocation.method(#stopRecording, []),
              returnValue:
                  Future<_i2.RecordingStopped>.value(_FakeRecordingStopped()))
          as _i5.Future<_i2.RecordingStopped>);
  @override
  _i5.Future<_i3.Unit> cancelRecording(
          {String? partialRecordingFileToDelete}) =>
      (super.noSuchMethod(
              Invocation.method(#cancelRecording, [], {
                #partialRecordingFileToDelete: partialRecordingFileToDelete
              }),
              returnValue: Future<_i3.Unit>.value(_FakeUnit()))
          as _i5.Future<_i3.Unit>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}
