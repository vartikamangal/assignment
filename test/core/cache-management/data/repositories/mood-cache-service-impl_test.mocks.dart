// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/core/cache-management/data/repositories/mood-cache-service-impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/cache-manager/data/models/cached-mood-model.dart'
    as _i3;
import 'package:tatsam_app_experimental/core/cache-manager/data/services/mood-cache-local-service.dart'
    as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeUnit extends _i1.Fake implements _i2.Unit {
  @override
  String toString() => super.toString();
}

class _FakeCachedMoodModel extends _i1.Fake implements _i3.CachedMoodModel {}

/// A class which mocks [MoodCacheLocalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoodCacheLocalService extends _i1.Mock
    implements _i4.MoodCacheLocalService {
  MockMoodCacheLocalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Unit> cacheMood({_i3.CachedMoodModel? cachedMoodModel}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #cacheMood, [], {#cachedMoodModel: cachedMoodModel}),
              returnValue: Future<_i2.Unit>.value(_FakeUnit()))
          as _i5.Future<_i2.Unit>);
  @override
  _i5.Future<_i3.CachedMoodModel> getCachedMood() =>
      (super.noSuchMethod(Invocation.method(#getCachedMood, []),
              returnValue:
                  Future<_i3.CachedMoodModel>.value(_FakeCachedMoodModel()))
          as _i5.Future<_i3.CachedMoodModel>);
}
