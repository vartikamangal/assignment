// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/features/home-management/domain/usecases/get-mood-popup-shown-status_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/error/failures.dart' as _i5;
import 'package:tatsam_app_experimental/features/home-management/domain/repositories/mood-popup-shown-repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {
  @override
  String toString() => super.toString();
}

/// A class which mocks [MoodPopupShownRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoodPopupShownRepository extends _i1.Mock
    implements _i3.MoodPopupShownRepository {
  MockMoodPopupShownRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool?>> getMoodPopupShownStatus() =>
      (super.noSuchMethod(Invocation.method(#getMoodPopupShownStatus, []),
              returnValue: Future<_i2.Either<_i5.Failure, bool?>>.value(
                  _FakeEither<_i5.Failure, bool?>()))
          as _i4.Future<_i2.Either<_i5.Failure, bool?>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> toogleIsMoodPopupShownState() =>
      (super.noSuchMethod(Invocation.method(#toogleIsMoodPopupShownState, []),
              returnValue: Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
                  _FakeEither<_i5.Failure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
}
