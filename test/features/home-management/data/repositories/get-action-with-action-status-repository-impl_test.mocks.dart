// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/features/home-management/data/repositories/get-action-with-action-status-repository-impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/platform/network_info.dart' as _i5;
import 'package:tatsam_app_experimental/features/home-management/data/models/post-onboparding-action-model.dart'
    as _i4;
import 'package:tatsam_app_experimental/features/home-management/data/sources/get-action-with-action-status-remote-data-source.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [GetActionWithActionStatusRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetActionWithActionStatusRemoteDataSource extends _i1.Mock
    implements _i2.GetActionWithActionStatusRemoteDataSource {
  MockGetActionWithActionStatusRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PostOnboardingActionModel>> getAction(
          {String? actionStatus}) =>
      (super.noSuchMethod(
              Invocation.method(#getAction, [], {#actionStatus: actionStatus}),
              returnValue: Future<List<_i4.PostOnboardingActionModel>>.value(
                  <_i4.PostOnboardingActionModel>[]))
          as _i3.Future<List<_i4.PostOnboardingActionModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
