// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/features/questionnaire-track/data/repositories/questionnaire-repository-impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:get/get_rx/src/rx_types/rx_types.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/platform/network_info.dart'
    as _i10;
import 'package:tatsam_app_experimental/features/questionnaire-track/data/models/questionnaire-model.dart'
    as _i3;
import 'package:tatsam_app_experimental/features/questionnaire-track/data/sources/questionnaire-remote-data-source.dart'
    as _i4;
import 'package:tatsam_app_experimental/features/questionnaire-track/domain/entities/question-option.dart'
    as _i9;
import 'package:tatsam_app_experimental/features/questionnaire-track/domain/entities/question.dart'
    as _i8;
import 'package:tatsam_app_experimental/features/questionnaire-track/domain/entities/questionnaire.dart'
    as _i6;
import 'package:tatsam_app_experimental/features/questionnaire-track/domain/entities/success-atempt-questionnaire.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeSuccessAtemptQuestionnaire extends _i1.Fake
    implements _i2.SuccessAtemptQuestionnaire {}

class _FakeQuestionnaireModel extends _i1.Fake
    implements _i3.QuestionnaireModel {}

/// A class which mocks [QuestionnaireRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionnaireRemoteDataSource extends _i1.Mock
    implements _i4.QuestionnaireRemoteDataSource {
  MockQuestionnaireRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.SuccessAtemptQuestionnaire> attemptQuestionnaire(
          {_i6.Questionnaire? questionnaire,
          _i7.RxMap<_i8.Question, dynamic>? questionToAnswerMap,
          _i7.RxMap<_i8.Question, _i9.QuestionOption>? questionToScaleMap}) =>
      (super.noSuchMethod(
              Invocation.method(#attemptQuestionnaire, [], {
                #questionnaire: questionnaire,
                #questionToAnswerMap: questionToAnswerMap,
                #questionToScaleMap: questionToScaleMap
              }),
              returnValue: Future<_i2.SuccessAtemptQuestionnaire>.value(
                  _FakeSuccessAtemptQuestionnaire()))
          as _i5.Future<_i2.SuccessAtemptQuestionnaire>);
  @override
  _i5.Future<_i3.QuestionnaireModel> getQuestionnaireById({String? id}) =>
      (super.noSuchMethod(
              Invocation.method(#getQuestionnaireById, [], {#id: id}),
              returnValue: Future<_i3.QuestionnaireModel>.value(
                  _FakeQuestionnaireModel()))
          as _i5.Future<_i3.QuestionnaireModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i10.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}
