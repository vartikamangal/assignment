// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/features/questionnaire-track/domain/usecases/get-questionnaire-by-id_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:dartz/dartz.dart' as _i4;
import 'package:get/get_rx/src/rx_types/rx_types.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/error/failures.dart' as _i5;
import 'package:tatsam_app_experimental/core/success/success-interface.dart'
    as _i6;
import 'package:tatsam_app_experimental/features/questionnaire-track/domain/entities/question-option.dart'
    as _i10;
import 'package:tatsam_app_experimental/features/questionnaire-track/domain/entities/question.dart'
    as _i9;
import 'package:tatsam_app_experimental/features/questionnaire-track/domain/entities/questionnaire.dart'
    as _i7;
import 'package:tatsam_app_experimental/features/questionnaire-track/domain/repositories/questionnaire-repository.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [QuestionnaireRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionnaireRepository extends _i1.Mock
    implements _i2.QuestionnaireRepository {
  MockQuestionnaireRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.Success>?> attempQuestionnaire(
          {_i7.Questionnaire? questionnaire,
          _i8.RxMap<_i9.Question, dynamic>? questionToAnswerMap,
          _i8.RxMap<_i9.Question, _i10.QuestionOption>? questionToScaleMap}) =>
      (super.noSuchMethod(
              Invocation.method(#attempQuestionnaire, [], {
                #questionnaire: questionnaire,
                #questionToAnswerMap: questionToAnswerMap,
                #questionToScaleMap: questionToScaleMap
              }),
              returnValue:
                  Future<_i4.Either<_i5.Failure, _i6.Success>?>.value())
          as _i3.Future<_i4.Either<_i5.Failure, _i6.Success>?>);
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i7.Questionnaire>?> getQuestionniare(
          {String? id}) =>
      (super.noSuchMethod(Invocation.method(#getQuestionniare, [], {#id: id}),
              returnValue:
                  Future<_i4.Either<_i5.Failure, _i7.Questionnaire>?>.value())
          as _i3.Future<_i4.Either<_i5.Failure, _i7.Questionnaire>?>);
}
