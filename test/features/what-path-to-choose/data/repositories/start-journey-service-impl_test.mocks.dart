// Mocks generated by Mockito 5.0.10 from annotations
// in tatsam_app_experimental/test/features/what-path-to-choose/data/repositories/start-journey-service-impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tatsam_app_experimental/core/platform/network_info.dart' as _i6;
import 'package:tatsam_app_experimental/features/what-path-to-choose/data/models/journey-model.dart'
    as _i5;
import 'package:tatsam_app_experimental/features/what-path-to-choose/data/sources/path-operations-remote-data-source.dart'
    as _i3;
import 'package:tatsam_app_experimental/features/what-path-to-choose/domain/entites/journey_started_success.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeSuccessJourneyStart extends _i1.Fake
    implements _i2.SuccessJourneyStart {}

/// A class which mocks [PathOperationsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPathOperationsRemoteDataSource extends _i1.Mock
    implements _i3.PathOperationsRemoteDataSource {
  MockPathOperationsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.JourneyModel>> getJourneys() =>
      (super.noSuchMethod(Invocation.method(#getJourneys, []),
              returnValue:
                  Future<List<_i5.JourneyModel>>.value(<_i5.JourneyModel>[]))
          as _i4.Future<List<_i5.JourneyModel>>);
  @override
  _i4.Future<_i2.SuccessJourneyStart> startJourney(
          {_i5.JourneyModel? journey}) =>
      (super.noSuchMethod(
              Invocation.method(#startJourney, [], {#journey: journey}),
              returnValue: Future<_i2.SuccessJourneyStart>.value(
                  _FakeSuccessJourneyStart()))
          as _i4.Future<_i2.SuccessJourneyStart>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
